#!/bin/bash

# curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/FilipAndersson245/.cfg/master/setup_fish | sh

sudo apt update -y
sudo apt-add-repository ppa:fish-shell/release-3
sudo apt upgrade -y

sudo apt install build-essential libssl-dev zlib1g-dev libasound2-dev cmake  \
libbz2-dev libreadline-dev libsqlite3-dev curl fzf ffmpeg expat pkg-config \
libxcb-composite0-dev libharfbuzz-dev libexpat1-dev libfreetype6-dev \
libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev fish fzf -y

echo /usr/local/bin/fish | sudo tee -a /etc/shells
fish -c 'chsh -s (command -s fish)'

fish -c "curl -sL https://raw.githubusercontent.com/jorgebucaran/fisher/main/functions/fisher.fish | source && fisher install jorgebucaran/fisher"
fish -c "fisher install nickeb96/puffer-fish"
fish -c "fisher install gazorby/fish-abbreviation-tips"
fish -c "fisher install gazorby/fish-abbreviation-tips"
fish -c "fisher install PatrickF1/fzf.fish"
fish -c "fisher install joseluisq/gitnow@2.11.0"
fish -c "fisher install edc/bass"

fish -c 'set -U fish_greeting ""'
mkdir -p ~/.config/fish/completions

curl https://pyenv.run | zsh

fish -c 'set -Ux PYENV_ROOT $HOME/.pyenv'
fish -c 'fish_add_path $PYENV_ROOT/bin'

echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
echo 'eval "$(pyenv init -)"' >> ~/.bashrc

echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zshrc
echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.zshrc
echo 'eval "$(pyenv init -)"' >> ~/.zshrc

echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bash_profile
echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bash_profile
echo 'eval "$(pyenv init -)"' >> ~/.bash_profile

echo 'pyenv init - | source' > ~/.config/fish/config.fish 

fish -c 'pyenv install 3.11'
fish -c 'pyenv install 3.10'
fish -c 'pyenv global 3.11'

# Rustup & Cargo
curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y
fish -c 'fish_add_path $HOME/.cargo/bin'

fish -c "set -x RUSTFLAGS '-C opt-level=3 -C target-cpu=native -C codegen-units=1 -C strip=symbols -C panic=abort' && \
  cargo install starship --locked && \
  cargo install bat --target-dir=/tmp/bat --locked && \
  cargo install zoxide --locked && \
  cargo install sd --locked && \
  cargo install git-delta --locked && \
  cargo install ripgrep --target-dir=/tmp/ripgrep --locked && \
  cargo install hyperfine --target-dir=/tmp/hyperfine --locked  && \
  cargo install silicon --locked && \
  cargo install gitui --locked && \
  cargo install grex --locked && \
  cargo install xh --locked && \
  cargo install du-dust --locked && 
  cargo install codevis --locked && \
  cargo install cargo-nextest --locked && \
  cargo install nu --locked"

fish -c 'rustup completions fish > ~/.config/fish/completions/rustup.fish'
fish -c 'starship completions fish > ~/.config/fish/completions/starship.fish'
mv /tmp/bat/release/build/bat-*/out/assets/completions/bat.fish ~/.config/fish/completions/
mv /tmp/hyperfine/release/build/hyperfine-*/out/hyperfine.fish ~/.config/fish/completions/
mv /tmp/ripgrep/release/build/ripgrep-*/out/rg.fish ~/.config/fish/completions/
mv /tmp/sd/release/build/sd-*/out/sd.fish ~/.config/fish/completions/

curl https://raw.githubusercontent.com/ducaale/xh/master/completions/xh.fish >> ~/.config/fish/completions/xh.fish
curl https://raw.githubusercontent.com/bootandy/dust/master/completions/dust.fish >> ~/.config/fish/completions/dust.fish

echo 'starship init fish | source' > ~/.config/fish/config.fish


# Only run these if in wsl
if [ -f "/proc/sys/fs/binfmt_misc/WSLInterop" ]; then
   echo 'Configuring wsl specific parameters.'
   fish -c "rg --files /mnt/c/Users/ -g code | fish_add_path"
   sudo touch /etc/wsl.conf || exit
   echo -e '[interop]\nappendWindowsPath = false' | sudo tee /etc/wsl.conf
fi

